# Import common-functions.
import "tfplan/v2" as tfplan

# Define allowed VM sizes.
allowed_vm_sizes = [
  "t2.micro",
  "t2.small",
  "t2.medium",
]

# Define allowed security group IDs.
allowed_security_groups = [
  "sg-049abb6b127451c69",
  "sg-0dda412b476047fca",
]

# Rule to check that all AWS instances use allowed VM sizes.
vm_size_rule = rule {
  all tfplan.resource_changes as _, rc {
    rc.type is "aws_instance" and rc.change.actions contains "create" and
    allowed_vm_sizes contains rc.change.after.instance_type
  }
}

# Rule to check that all AWS instances use allowed security groups.
security_group_rule = rule {
  all tfplan.resource_changes as _, rc {
    rc.type is "aws_instance" and rc.change.actions contains "create" and
    length(rc.change.after.security_group_ids) > 0 and
    all rc.change.after.security_group_ids as sg {
      allowed_security_groups contains sg
    }
  }
}

# Rule to check that only AWS instances and security groups are being provisioned.
resource_type_rule = rule {
  all tfplan.resource_changes as _, rc {
    rc.type in ["aws_instance", "aws_security_group"]
  }
}

# Combine all rules into a single policy.
main = rule {
  vm_size_rule and
  security_group_rule and
  resource_type_rule
}
